/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

/** Values for each field key,  */
export type CommitMessageFields = Record<string, string | Array<string>>;

export type TypeaheadKind =
  | 'meta-user'
  | 'meta-task'
  | 'meta-tag'
  | 'meta-diff'
  | 'meta-privacy-context';
export type TypeaheadResult = {
  /** The display text of the suggestion */
  label: string;

  /**
   * Additional details to show de-emphasized next to the display name.
   * If provided, this is shown visually instead of the value.
   */
  detail?: string;

  /**
   * The literal value of the suggestion, placed literally as text into the commit message.
   * If `detail` is not provided, value is shown de-emphasized next to the display name.
   */
  value: string;

  /**
   * An optional image url representing this result. Usually, a user avatar.
   */
  image?: string;
};

/**
 * Which fields of the message should display as editors instead of rendered values.
 * This is derived from edits to the commit message.
 *
 * ```
 * {
 *   title: boolean,
 *   description: boolean,
 *   ...
 * }
 * ```
 */
export type FieldsBeingEdited = Record<string, boolean>;

/**
 * Dynamic configuration for a single field in a commit message
 */
export type FieldConfig = {
  /**
   * Label for this field, and the value used to parse this key from the string.
   * For example, "Summary" corresponds to 'Summary:' in the commit message.
   * There are some specially handled values:
   *   'Title' -> we don't look for "title: foo", we assume first line is the title always.
   *   'Description' -> we don't look for "description: foo", description is handled as the entire message
   */
  key: 'Title' | string;
  /** Codicon to show next to this field */
  icon: string;
  supportsBeingAutoGenerated?: boolean;
  /** Whether this field may be rendered from markup into html */
  isRenderableMarkup?: boolean;
} & (
  | {
      /**
       * Type of the field to show in the UI.
       * textarea => long form content, with extra buttons for image uploading, etc. Supports vertical resize.
       * field => single-line, tokenized field
       * title => non-resizeable textarea for the title, which has special rendering.
       * read-only => this field should be parsed from the commit message but you don't need to edit it. Usually, it's something added by automation.
       */
      type: 'title' | 'textarea' | 'read-only';
    }
  | {
      type: 'field';
      typeaheadKind: TypeaheadKind;
      maxTokens?: number;
      /** pre-process value in commit message to extract token values */
      extractValues?: (text: string) => Array<string>;
      /** post-process token values before placing it in the actual commit message */
      formatValues?: (tokens: Array<string>) => string | undefined;
      getUrl?: (token: string) => string;
    }
);
